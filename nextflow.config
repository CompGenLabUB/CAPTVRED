params{
  //environment parameters:
    // init params
    // working directory
    samp        =  null  // Sample definition tabular file
    fastq_dir   =  null  // Directory for target species data
  
    runID       =  null  // "RUN00"
    R1          =  "_R1_001"
    R2          =  "_R2_001"
    setname     =  "targetset"

    // refseqs and databases
    set_seqs      =  "setseqs.fasta.gz"  // Fasta file for set species is stores (full path)
    fams_subset   =  "foi_subset_db.fasta.gz" //subset of rvdb conaining only 
    others_subset =  "other_subset_db.fasta.gz"
   //  kaijuDBD    =  null //params.refseqs + '/kaijudb'
    amplicon_refseqs_dir   =  null //params.refseqs+'/ampliconseqs'
    amplicon_refseqs_info  =  "Viral_candidates_zoonosis_full_info.tsv"

    // amplicon_refseqs_dir="$AMPSQD"
    // amplicon_refseqs_info="$AMPSQINFO"
    // amplicon_refseqs="$AMPSQFA"
    // blast_refseqs_dir="$BL_DB_D"

    // Input samples:
    //rawfq="$params.wdir/rawseqs_fastq/*{${R1},${R2}}.{fastq,fq}.gz"
   // rawfq_dir="$params.basedir/rawseqs_fastq"
    rawfq_sfx="{$params.R1,$params.R2}.{fastq,fq}.gz"
    // sampletbl= params.basedir+'/samples_definition.tbl'
    
  //
    NCPUS=32
    // MAXMEM="$MAXMEM"
    // phred="$PhredOffset"
    
    
  // Cleaning params (BBDuk):
    trim_adapters = true
   // bbdukREF="${params.refseqs}/bbmap/resources/adapters.fa"
    bbdukMINLEN=32
    bbdukMAQ=10
    
  // BOWTIE and Alignment params:
    alignMINQ=13
    bowtie_nmismatch=1
    bowtie_seedlen=18
    
  // Assembly params:
    assembler="megahit"
    assemblyMINCONLEN=100;
    
    trinityMAXM="250G"
    megahit_errorHandler = "finish"

  //  subasb_dir  =  (params.assembler ==~ /(?i)MEGAHIT/)   ? 
  //                    "${params.asbl_dir}/megahit"        :
  //                    ((params.assembler ==~ /(?i)METASPADES/)  ? 
  //                        "${params.asbl_dir}/metaspades"       : 
  //                         null )
   
  // Taxonomy
     //taxonfast = false
     //taxonslow = false
    taxalg="BLASTN"
    
 //   subtax_dir  =  (params.taxalg ==~ /(?i)BLASTN/)  ? 
 //                     "${params.taxdir}/blastn"      :
 //                     ( (params.taxalg ==~ /(?i)TBLASTX/) ? 
 //                         "${params.taxdir}/tblastx"      : 
 //                         ((params.taxalg ==~ /(?i)KAIJU/)     ? 
 //                               "${params.taxdir}/kaiju"       : 
 //                               null))

  // Blast params:
    // blast_approach="BLASTN"
    // blast_ref_db_name="C-RVDBvCurrent_blastdb"
    // blast_ref_db_name="$BL_DB_NM" 
       //"C-RVDBvCurrent_blastdb"
    // blast_ref_db_ids="$BDBD_IDS"
   //  blast_ref_db_info="C-RVDB_allentries_info.txt"
    blast_eval=10e-10
    blast_pident=50
    taxondbsize=5000000000 // about 2 times db size (2428170463)
    
  // ON REFERENCES (SET)
    general_only = false
  
  // Blast against Viral Candidates (vcan)
    bl_suffix="blastn_on_viralcandidates"
    vcan_eval=0.001
    vcan_pident=50
    
    // do not modify! //
    bl_outfmt="6 qseqid qlen sseqid slen qstart qend sstart send"
    bl_outfmt="${bl_outfmt} length score evalue bitscore pident"
    bl_outfmt="${bl_outfmt} nident mismatch positive gapopen gaps"
    bl_outfmt="${bl_outfmt} ppos qframe sframe qcovs qcovhsp qseq sseq"
    // do not modify! //
    
  // Kaiju Params:
    kaijumaxCPUS=26 
    kaijuMAX_FORKS=4
    kaijuMAX_RETRIES=2
    kaijuDBRAW="nr_euk"   // database for kaiju into raw reads
    //kaijudb="${KAI_DB_NM}"  // database for kaiju in taxonomy classification 
    // kaijuDBRAW="${KAI_DB_NMraw}"   // database for kaiju into raw reads
    // blastfastdb="rvdb"
    
  // Filter params:
    mincovpct=70

  // Handle Contamination:
    handle_contamination = false
    cont_min_cov=100;
    if (params.handle_contamination == true ) {
      cids="$contamin_ids";
      cfaa="$contamin_faa";
    }
    
}

process {
    withLabel: 'trinity_crash' {
       errorStrategy = 'ignore'
    }
    
    withLabel: 'megahit_crash' {
       errorStrategy = params.megahit_errorHandler
    }

    withLabel: 'limit_kaiju' {
       errorStrategy = 'retry'
       maxRetries = params.kaijuMAX_RETRIES
       maxForks = params.kaijuMAX_FORKS
       if ( params.NCPUS < params.kaijumaxCPUS ) { 
            cpus=params.NCPUS 
       } else { 
            cpus=params.kaijumaxCPUS  }
              
       
    }
}

env {

    //Fixing issues with python utf8 libraries
    LANG = "en_US.UTF-8"
    LC_CTYPE = "en_US.UTF-8"
    LC_NUMERIC = "en_US.UTF-8"
    LC_TIME = "en_US.UTF-8"
    LC_COLLATE = "en_US.UTF-8"
    LC_MONETARY = "en_US.UTF-8"
    LC_MESSAGES = "en_US.UTF-8"
    LC_ALL = "en_US.UTF-8"
    
    //BLAST output vars
    //BLOUTFMT = "6 qseqid qlen sseqid slen qstart qend sstart send length"
    //BLOUTFMT = "${BLOUTFMT} score evalue bitscore pident nident mismatch positive"
    //BLOUTFMT = "${BLOUTFMT} gapopen gaps ppos qframe sframe qseq sseq"
    
    // Kaiju params
    //kaiju_dbs="viruses, rvdb, refseq, nr_euk"
    
    
    //Further defs
    //BP_LOG = "$BDIR/logs/biopieces"
    BPCOL = 'SEQ_NAME,SEQ_LEN,RES[A],RES[C],RES[G],RES[T],GC%'
    BPCOL = "$BPCOL,SCORES_MIN,SCORES_MAX,SCORES_MEAN,SCORES_MEDIAN"

    TAB = "\t"
    RET = "\n"

    ZERO="###0###"
}

// trace {
//     enabled = true
//     file = "$params.reports_dir/CAPTVRED_analysis_nextflow_trace.txt"
//     overwrite = true
// }
// report {
//     enabled = true
//     file = "$params.reports_dir/CAPTVRED_analysis_nextflow_execution_report.html"
//     overwrite = true
// }

// dag {
//     enabled = true
//     file = "${params.reports_dir}/${params.runID}_dag.dot"
//     overwrite = true
// }
// conda {
//     enabled = true
//     autoInstall = true
// }