params{
  //environment parameters:
    tmp_dir="$TMPD"
    wdir = "$BDIR"
    bindir="$BIND"
    amplicon_refseqs_dir="$AMPSQD"
    amplicon_refseqs_info="$AMPSQINFO"
    amplicon_refseqs="$AMPSQFA"
    blast_refseqs_dir="$BL_DB_D"
    rawfq_dir="$RAWFQ"
    clnfq_dir="$CLNDIR"
    ampaln_dir="$AMPALD"
    asbl_dir="$ASSBLD"
    // contigs_blast_dir="$CBLASTD"
    taxdir="$TAXDIR"
    taxkaidir="$TAXDIR/contigs_taxon/kaiju"
    taxbndir="$TAXDIR/contigs_taxon/blastn"
    taxtbxdir="$TAXDIR/contigs_taxon/tblastx"
    taxrefsqs="$TAXDIR/taxon_on_refseqs"
    nfscripts_dir="$NXFDIR"
    reports_dir="$RPTD"
    logs_dir="$LOGD"
    kaijuDBD="$KAI_DB_D"

    runID ="$RUNID"
    R1="$R1"
    R2="$R2"
    
    // Input samples:
    //rawfq="$params.wdir/rawseqs_fastq/*{${R1},${R2}}.{fastq,fq}.gz"
    rawfq_dir="$params.wdir/rawseqs_fastq/"
    rawfq_sfx="{${R1},${R2}}.{fastq,fq}.gz"
    sampletbl="$params.wdir/samples_definition.tbl"
    
  //
    NCPUS="$NCPUS"
    MAXMEM="$MAXMEM"
    // phred="$PhredOffset"
    
    
  // Cleaning params (BBDuk):
    trim_adapters = true
    bbdukREF="${BBDUK_RES}/adapters.fa"
    bbdukMINLEN=32
    bbdukMAQ=10
    
  // BOWTIE and Alignment params:
    alignMINQ=13
    bowtie_nmismatch=1
    bowtie_seedlen=18
    
  // Assembly params:
    assembler="megahit"
    assemblyMINCONLEN="$minconlen";
    
    trinityMAXM="250G"
    megahit_errorHandler = "finish"
   
  // Taxonomy
     //taxonfast = false
     //taxonslow = false
    taxalg="BLASTN"
    
  // Blast params:
    // blast_approach="BLASTN"
    // blast_ref_db_name="C-RVDBvCurrent_blastdb"
    blast_ref_db_name="$BL_DB_NM" //"C-RVDBvCurrent_blastdb"
    // blast_ref_db_ids="$BDBD_IDS"
    blast_ref_db_info="$BL_DB_IF"
    blast_eval=10e-10
    blast_pident=50
    taxondbsize=5000000000  // about 2 times db size (2428170463)
    
  // ON REFERENCES (SET)
    general_only = false
  
  // Blast against RefSeqs (to get coverage by reference) COR
    bl_suffix="blastn_on_refseqs"
    cor_eval=10e-3
    cor_pident=50
    
    // do not modify! //
    bl_outfmt="6 qseqid qlen sseqid slen qstart qend sstart send"
    bl_outfmt="${bl_outfmt} length score evalue bitscore pident"
    bl_outfmt="${bl_outfmt} nident mismatch positive gapopen gaps"
    bl_outfmt="${bl_outfmt} ppos qframe sframe qcovs qcovhsp qseq sseq"
    // do not modify! //
    
  // Kaiju Params:
    kaijumaxCPUS=26 
    kaijuMAX_FORKS=4
    kaijuMAX_RETRIES=2
    kaijuDBRAW="${KAI_DB_NM}"   // database for kaiju into raw reads
    kaijudb="${KAI_DB_NM}"  // database for kaiju in taxonomy classification 
    // blastfastdb="rvdb"
    
  // Filter params:
    mincovpct=70

  // Handle Contamination:
    handle_contamination = false
    cont_min_cov=100;
    if (params.handle_contamination == true ) {
      cids="$contamin_ids";
      cfaa="$contamin_faa";
    }
    
}

process {
    withLabel: 'trinity_crash' {
       errorStrategy = 'ignore'
    }
    
    withLabel: 'megahit_crash' {
       errorStrategy = params.megahit_errorHandler
    }

    withLabel: 'limit_kaiju' {
       errorStrategy = 'retry'
       maxRetries = params.kaijuMAX_RETRIES
       maxForks = params.kaijuMAX_FORKS
       if ( params.NCPUS < params.kaijumaxCPUS ) { 
            cpus=params.NCPUS 
       } else { 
            cpus=params.kaijumaxCPUS  }
              
       
    }
}

env {

    //Fixing issues with python utf8 libraries
    LANG = "en_US.UTF-8"
    LC_CTYPE = "en_US.UTF-8"
    LC_NUMERIC = "en_US.UTF-8"
    LC_TIME = "en_US.UTF-8"
    LC_COLLATE = "en_US.UTF-8"
    LC_MONETARY = "en_US.UTF-8"
    LC_MESSAGES = "en_US.UTF-8"
    LC_ALL = "en_US.UTF-8"
    
    //BLAST output vars
    //BLOUTFMT = "6 qseqid qlen sseqid slen qstart qend sstart send length"
    //BLOUTFMT = "${BLOUTFMT} score evalue bitscore pident nident mismatch positive"
    //BLOUTFMT = "${BLOUTFMT} gapopen gaps ppos qframe sframe qseq sseq"
    
    // Kaiju params
    //kaiju_dbs="viruses, rvdb, refseq, nr_euk"
    
    
    //Further defs
    //BP_LOG = "$BDIR/logs/biopieces"
    BPCOL = 'SEQ_NAME,SEQ_LEN,RES[A],RES[C],RES[G],RES[T],GC%'
    BPCOL = "$BPCOL,SCORES_MIN,SCORES_MAX,SCORES_MEAN,SCORES_MEDIAN"

    TAB = "\t"
    RET = "\n"

    ZERO="###0###"
}

trace {
    enabled = true
    file = "${RPTD}/CAPTVRED_analysis_nextfflow_trace.txt"
    overwrite = true
}
report {
    enabled = true
    file = "${RPTD}/CAPTVRED_analysis_nextflow_execution_report.html"
    overwrite = true
}

dag {
    enabled = true
    file = "${RPTD}/${RUNID}_dag.dot"
    overwrite = true
}
